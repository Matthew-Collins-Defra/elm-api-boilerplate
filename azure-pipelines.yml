trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: containergroup

steps:
- task: DockerCompose@0
  displayName: Build container images
  inputs:
    action: Build services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: docker/docker-compose.test.yml
    dockerComposeFileArgs: |
      NODE_ENV=production
      PORT=3001
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    additionalImageTags: $(Build.BuildId)

- task: DockerCompose@0
  displayName: Unit test
  inputs:
    action: Run a specific service
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: docker/docker-compose.test.yml
    dockerComposeFileArgs: |
      NODE_ENV=production
      PORT=3001
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    serviceName: unit-test
    ports: 3001
    detached: true

- task: PublishTestResults@2
  displayName: Publish test results
  inputs:
    testResultsFormat: JUnit
    testResultsFiles: test-output/TEST-*.xml
    failTaskOnFailedTests: true
    testRunTitle: Unit Test

- task: DockerCompose@0
  displayName: Push services
  inputs:
    action: Push services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: docker/docker-compose.yml
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    additionalImageTags: $(Build.BuildId)
