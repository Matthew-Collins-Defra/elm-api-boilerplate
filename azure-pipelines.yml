trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: containergroup
  - name: testOutputDir
    value: test-output

steps:
- bash: mkdir $(testOutputDir)/ && chmod 777 $(testOutputDir)/
  displayName: Create test output folder

- task: DockerCompose@0
  displayName: Build container images
  inputs:
    action: Build services
    containerregistrytype: Azure Container Registry
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: docker-compose.yml
    additionalDockerComposeFiles: docker-compose.override.yml
    dockerComposeFileArgs: |
      NODE_ENV=production
      PORT=3001
    projectName: elm-lmp
    qualifyImageNames: true

- task: DockerCompose@0
  displayName: Unit test
  inputs:
    action: Run a specific service
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    containerregistrytype: Azure Container Registry
    dockerComposeFile: docker-compose.yml
    additionalDockerComposeFiles: docker-compose.override.yml
    dockerComposeFileArgs: |
      NODE_ENV=production
      PORT=3001
    detached: false
    projectName: elm-lmp
    qualifyImageNames: true
    serviceName: development
    command: npm run test

- task: PublishTestResults@2
  displayName: Publish unit test results
  inputs:
    testResultsFormat: JUnit
    testResultsFiles: $(testOutputDir)/junit.xml
    failTaskOnFailedTests: true
    testRunTitle: Unit Test

- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(testOutputDir)/cobertura-coverage.xml

- task: DockerCompose@0
  displayName: Push production images
  inputs:
    action: Push services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    containerregistrytype: Azure Container Registry
    dockerComposeFile: docker-compose.yml
    projectName: elm-lmp
    qualifyImageNames: true
